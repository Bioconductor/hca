rm(list = ls())
setwd("~/Desktop/Palliative_Treatment")
# install packages
#install.packages("stringr", dependencies = T)
#install.packages("tidyverse", dependencies = T)
#install.packages("dplyr", dependencies = T)
#install.packages("ggplot2", dependencies = T)
#install.packages("reshape2", dependencies = T)
# load libraries
# for regex
library(stringr)
# for the all of tidyverse, including pipe operator
library(tidyverse)
# for dataframe manipulations
library(dplyr)
# for plotting
library(ggplot2)
library(reshape2)
# help from: https://www.r-bloggers.com/importing-data-to-r/
# import data saved as .csv
origData <- read.csv("~/Desktop/Palliative_Treatment/Edited Professional Historical Claims_send 061319.csv", header = TRUE)
# head(origData)
# retain only the columns I want
myData <- origData[,c(1,2,3,5,6,7,13,17,18,34,35,36,37,38,39,40,41,42,43,44,45,46,47)]
# head(myData)
# length(unique(myData$MRN))
################################################################
# EDA for Roswell Park Palliative Care and Treatment Project
#
# Author: Maya Reed McDaniel
# Created on: 6/11/19
# Updated on: 8/16/19
#################################################################
rm(list = ls())
setwd("~/Desktop/Palliative_Treatment")
# install packages
#install.packages("stringr", dependencies = T)
#install.packages("tidyverse", dependencies = T)
#install.packages("dplyr", dependencies = T)
#install.packages("ggplot2", dependencies = T)
#install.packages("reshape2", dependencies = T)
# load libraries
# for regex
library(stringr)
# for the all of tidyverse, including pipe operator
library(tidyverse)
# for dataframe manipulations
library(dplyr)
# for plotting
library(ggplot2)
library(reshape2)
# help from: https://www.r-bloggers.com/importing-data-to-r/
# import data saved as .csv
origData <- read.csv("~/Desktop/Palliative_Treatment/Edited Professional Historical Claims_send 061319.csv", header = TRUE)
# head(origData)
# retain only the columns I want
myData <- origData[,c(1,2,3,5,6,7,13,17,18,34,35,36,37,38,39,40,41,42,43,44,45,46,47)]
# head(myData)
# length(unique(myData$MRN))
#######################################################################
# Data cleaning
#######################################################################
# Cast columns to correct type
# help from: https://stackoverflow.com/questions/21125222/determine-the-data-types-of-a-data-frames-columns
# sapply(myData, class)
# need to cast date of death (DOD) and date of service (DOS) as dates
# first check for null values
# help from: https://stackoverflow.com/questions/7980622/subset-of-rows-containing-na-missing-values-in-a-chosen-column-of-a-data-frame
# myData[is.na(myData$DOS),]
# myData[is.na(myData$DOD),]
# need more formats
# help from: https://www.r-bloggers.com/date-formats-in-r/
# https://stackoverflow.com/questions/56139306/date-format-without-leading-zeros-r
dateFormats <- c("%M-%d-%y", "%M/%d/%y", "%m-%d-%y", "%m/%d/%y")
myData$DOS <- as.Date(myData$DOS, format="%m/%d/%y")
# had some formatting errors with DOS when it came to casting
myData$DOD <- as.Date(myData$DOD, format="%m/%d/%y")
# sapply(myData, class)
#--------------------------------------------------------------------
# Drop columns with no variation
# code from: https://stackoverflow.com/questions/8805298/quickly-remove-zero-variance-variables-from-a-data-frame
out <- lapply(myData, function(x) length(unique(x)))
# out
# drop TCPHARM as it is 0 for all rows
# code from: https://stackoverflow.com/questions/4605206/drop-data-frame-columns-by-name
myData <- subset(myData, select = -c(TCPHARM))
#######################################################################
# Data processing
#######################################################################
# create a binary for patient having seen palliative care
# help from: https://stackoverflow.com/questions/15016723/how-to-add-column-into-a-dataframe-based-on-condition
# https://www.r-bloggers.com/regular-expressions-every-r-programmer-should-know/
# https://stringr.tidyverse.org/articles/regular-expressions.html
pallInBilldiv<- str_detect(myData$BILLDIV, regex("palliative", ignore_case = TRUE))
pallInDivision<- str_detect(myData$DIVISION, regex("palliative", ignore_case = TRUE))
pallInDescription<- str_detect(myData$DESC.1, regex("palliative", ignore_case = TRUE))
myData$Palliative <- ifelse((pallInBilldiv | pallInDivision | pallInDescription), "pall", "nopall")
myData$Palliative <- as.factor(myData$Palliative)
# levels(myData$Palliative)
# difference between DOS and DOD
# help from: https://stackoverflow.com/questions/14454476/get-the-difference-between-dates-in-terms-of-weeks-months-quarters-and-years
# https://stackoverflow.com/questions/42819415/using-conditional-statements-with-difftime-in-r
# https://www.dummies.com/programming/r/how-to-present-dates-in-different-formats-in-r/
myData$DateDiff <- difftime(myData$DOD,myData$DOS,units = "days")
myData$DateDiff <- as.integer(myData$DateDiff)
# check my dateDiff against provided difference between DOS and DOD
# identical(myData$DateDiff,myData$Days.between.DOD.and.DOS)
# difference between date of palliative care service and DOD
# set to -1 if service was not palliative care
myData$PallToDOD <- ifelse((as.character(myData$Palliative)=="pall"),myData$DateDiff,-1)
myData$PallToDOD <- as.integer(myData$PallToDOD)
# check if patient died in house at RPCCC or not, using the “DOS” == “DOD” as a criteria for died at RPCCC
myData$InhouseDeath <- ifelse((myData$DOS==myData$DOD),"Yes","No")
myData$InhouseDeath <- as.factor(myData$InhouseDeath)
# levels(myData$InhouseDeath)
#--------------------------------------------------------------------
# help from: https://stackoverflow.com/questions/37576228/how-to-write-new-column-conditional-on-grouped-rows-in-r
# https://magrittr.tidyverse.org/
# https://stackoverflow.com/questions/38253868/ifelse-statement-with-factors-in-r
# https://stackoverflow.com/questions/44451100/r-compare-string-variables-with-different-levels
# https://stackoverflow.com/questions/12127149/find-the-max-date-in-a-single-column-across-multiple-rows
# whether each unique MRN had any palliative care
# days between earliest palliative care visit and DOD (set to infinity if never had)
# whether or not patient's death was inhouse
# check if patient  was in ICU on last admission, using Column “BILLDIV” == ICU -> Didn't pan out
# accumulation of different charges by MRN
myFinData <- myData %>%
group_by(MRN)%>%
summarise(AnyPall = ifelse(any(as.character(Palliative)=="pall"),"P","NP"),
PallToDOD=ifelse(any(as.character(Palliative)=="pall"),max(PallToDOD),Inf),
InhouseDeath = ifelse(any(as.character(InhouseDeath)=="Yes"),"Yes","No"),
ICULA= ifelse(any(DOS==max(DOS) && BILLDIV == "ICU"),"Yes","No"),
TotTCLABOR=sum(TCLABOR),
TotTCFRINGE=sum(TCFRINGE),
TotTCMEDSUP=sum(TCMEDSUP),
TotTCOTHSUP=sum(TCOTHSUP),
TotTCPURSVC=sum(TCPURSVC),
TotTCEQUIP=sum(TCEQUIP),
TotTCUTILIT=sum(TCUTILIT),
TotTCOTHER=sum(TCOTHER),
TotTCDIRECT=sum(TCDIRECT),
TotNETCHG=sum(NETCHG),
TotNETPAY=sum(NETPAY))
myFinData <- as.data.frame(myFinData)
# sapply(myFinData, class)
myFinData$AnyPall <- as.factor(myFinData$AnyPall)
# levels(myFinData$AnyPall)
table(myFinData$AnyPall)
myFinData$InhouseDeath <- as.factor(myFinData$InhouseDeath)
# levels(myFinData$InhouseDeath)
table(myFinData$InhouseDeath)
myFinData$ICULA <- as.factor(myFinData$ICULA)
# levels(myFinData$ICULA)
table(myFinData$ICULA)
# drop because seemingly no-one was in ICU on their last service date
myFinData <- subset(myFinData, select = -c(ICULA))
#----------------------------------------------------------------------
# accumulation of charges subset by inpatient and outpatient
# counts of inpatient and outpatient admissions
# count of total distinct admissions
# precentage of net charges and payment attributed to palliative care
#----------------------------------------------------------------------
# subset of only patients who met with palliative care team
# https://stackoverflow.com/questions/3445590/extract-a-subset-of-a-dataframe-based-on-a-condition-involving-a-field
myPalPatients <- subset(myFinData, AnyPall=="P")
myPalPatients <- subset(myPalPatients, select = -c(AnyPall))
#######################################################################################
# EDA + Visualizations
# help from: https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
# http://www.cookbook-r.com/Graphs/
########################################################################################
# average costs for palliative vs no-palliative patients
# https://www.biostars.org/p/362024/
# https://r4ds.had.co.nz/tidy-data.html
# https://stackoverflow.com/questions/11857935/plotting-the-average-values-for-each-level-in-ggplot2
# https://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2
# https://stackoverflow.com/questions/30183199/ggplot2-plot-mean-with-geom-bar
# https://stackoverflow.com/questions/12715635/ggplot2-bar-plot-with-both-stack-and-dodge
# average costs for palliative vs no-palliative patients
# must first gather data together by charge type
myFinData %>%
gather(`TotTCLABOR`, `TotTCFRINGE`,`TotTCMEDSUP`,`TotTCOTHSUP`,`TotTCPURSVC`,`TotTCEQUIP`,`TotTCUTILIT`,`TotTCOTHER`, `TotTCDIRECT`,`TotNETCHG`,`TotNETPAY`, key = "CostType", value = "CostValue", -AnyPall) %>%
ggplot(aes(x=CostType, y=CostValue, fill=CostType)) +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~AnyPall) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(name="Total Net Charges (USD)", labels=scales::comma) +
ggtitle("Cost Averages for Patients with and without Palliative Care") +
ylab("Average Cost (USD)") +
xlab("Cost Type")
#---------------------------------------------------------------------------------------
# for palliative, scatter plots of PallToDOD vs total net charges
# help from:
# http://www.cookbook-r.com/Graphs/Scatterplots_(ggplot2)/
# https://stackoverflow.com/questions/14563989/force-r-to-stop-plotting-abbreviated-axis-labels-e-g-1e00-in-ggplot2
# https://stackoverflow.com/questions/11610377/how-do-i-change-the-formatting-of-numbers-on-an-axis-with-ggplot
ggplot(myPalPatients, aes(x=PallToDOD, y=TotNETCHG)) + geom_point(shape=1) +
scale_y_continuous(name="Total Net Charges (USD)", labels=scales::comma) +
xlab("Days between Fist Palliative Care Treatment and Patient's DOD") +
ylab("Total Net Charges (USD)") +
ggtitle("Total Net Charges vs Time between First Palliative Care Treatment to DOD")
#------------------------------------------------------------------------------
# For inhouse deaths, how many received palliative care
# help from: https://www.statmethods.net/graphs/bar.html
# https://ggplot2.tidyverse.org/reference/geom_bar.html
table(myFinData$AnyPall, myFinData$InhouseDeath)
ggplot(myFinData, aes(InhouseDeath))+
geom_bar(aes(fill = AnyPall))+
xlab("Inhouse Death") +
ylab("Palliative vs No Palliative Care") +
ggtitle("Palliative Care by Inhouse Death")
# alternative view
ggplot(myFinData, aes(x=InhouseDeath, fill = AnyPall)) +
geom_bar(position = "fill") +
scale_y_continuous(name="Palliative vs No Palliative Care", labels=scales::percent)+
xlab("Inhouse Death") +
ggtitle("Palliative Care by Inhouse Death (Percentage)")
################################################################
# EDA for Roswell Park Palliative Care and Treatment Project
# Working with just preliminary in-house death data
#
# Author: Maya Reed McDaniel
# Created on: 6/11/19
# Updated on: 8/19/19
#################################################################
rm(list = ls())
setwd("~/Desktop/Palliative_Treatment")
# install packages
#install.packages("stringr", dependencies = T)
#install.packages("tidyverse", dependencies = T)
#install.packages("dplyr", dependencies = T)
#install.packages("ggplot2", dependencies = T)
#install.packages("reshape2", dependencies = T)
# load libraries
# for regex
library(stringr)
# for the all of tidyverse, including pipe operator
library(tidyverse)
# for dataframe manipulations
library(dplyr)
# for plotting
library(ggplot2)
library(reshape2)
# help from: https://www.r-bloggers.com/importing-data-to-r/
# import data saved as .csv
origData <- read.csv("~/Desktop/Palliative_Treatment/Edited Professional Historical Claims_send 061319.csv", header = TRUE)
# head(origData)
# retain only the columns I want
myData <- origData[,c(1,2,3,5,6,7,13,17,18,34,35,36,37,38,39,40,41,42,43,44,45,46,47)]
# head(myData)
length(unique(myData$MRN))
#######################################################################
# Data cleaning
#######################################################################
# Cast columns to correct type
# help from: https://stackoverflow.com/questions/21125222/determine-the-data-types-of-a-data-frames-columns
#sapply(myData, class)
# need to cast date of death (DOD) and date of service (DOS) as dates
# first check for null values
# help from: https://stackoverflow.com/questions/7980622/subset-of-rows-containing-na-missing-values-in-a-chosen-column-of-a-data-frame
#myData[is.na(myData$DOS),]
#myData[is.na(myData$DOD),]
# need more formats
# help from: https://www.r-bloggers.com/date-formats-in-r/
# https://stackoverflow.com/questions/56139306/date-format-without-leading-zeros-r
dateFormats <- c("%M-%d-%y", "%M/%d/%y", "%m-%d-%y", "%m/%d/%y")
myData$DOS <- as.Date(myData$DOS, format="%m/%d/%y")
# had some formatting errors with DOS when it came to casting
myData$DOD <- as.Date(myData$DOD, format="%m/%d/%y")
#sapply(myData, class)
#--------------------------------------------------------------------
# Drop columns with no variation
# code from: https://stackoverflow.com/questions/8805298/quickly-remove-zero-variance-variables-from-a-data-frame
out <- lapply(myData, function(x) length(unique(x)))
#out
# drop TCPHARM as it is 0 for all rows
# code from: https://stackoverflow.com/questions/4605206/drop-data-frame-columns-by-name
myData <- subset(myData, select = -c(TCPHARM))
#######################################################################
# Data processing
#######################################################################
# create a binary for patient having seen palliative care
# help from: https://stackoverflow.com/questions/15016723/how-to-add-column-into-a-dataframe-based-on-condition
# https://www.r-bloggers.com/regular-expressions-every-r-programmer-should-know/
# https://stringr.tidyverse.org/articles/regular-expressions.html
pallInBilldiv<- str_detect(myData$BILLDIV, regex("palliative", ignore_case = TRUE))
# just do billing division palliative care
pallInDivision<- str_detect(myData$DIVISION, regex("palliative", ignore_case = TRUE))
pallInDescription<- str_detect(myData$DESC.1, regex("palliative", ignore_case = TRUE))
# | pallInDivision | pallInDescription
myData$Palliative <- ifelse((pallInBilldiv), "pall", "nopall")
myData$Palliative <- as.factor(myData$Palliative)
levels(myData$Palliative)
# difference between DOS and DOD
# help from: https://stackoverflow.com/questions/14454476/get-the-difference-between-dates-in-terms-of-weeks-months-quarters-and-years
# https://stackoverflow.com/questions/42819415/using-conditional-statements-with-difftime-in-r
# https://www.dummies.com/programming/r/how-to-present-dates-in-different-formats-in-r/
myData$DateDiff <- difftime(myData$DOD,myData$DOS,units = "days")
myData$DateDiff <- as.integer(myData$DateDiff)
# check my dateDiff against provided difference between DOS and DOD
identical(myData$DateDiff,myData$Days.between.DOD.and.DOS)
# difference between date of palliative care service and DOD
# set to -1 if service was not palliative care
myData$PallToDOD <- ifelse((as.character(myData$Palliative)=="pall"),myData$DateDiff,NaN)
myData$PallToDOD <- as.integer(myData$PallToDOD)
# difference between date of ICU service and DOD
# set to -1 if service was not ICU
myData$ICUToDOD <- ifelse((myData$BILLDIV=="ICU"),myData$DateDiff,NaN)
myData$ICUToDOD <- as.integer(myData$ICUToDOD)
# check if patient died in house at RPCCC or not, using the “DOS” == “DOD” as a criteria for died at RPCCC
myData$InhouseDeath <- ifelse((myData$DOS==myData$DOD),"Yes","No")
myData$InhouseDeath <- as.factor(myData$InhouseDeath)
levels(myData$InhouseDeath)
#--------------------------------------------------------------------
# help from: https://stackoverflow.com/questions/37576228/how-to-write-new-column-conditional-on-grouped-rows-in-r
# https://magrittr.tidyverse.org/
# https://stackoverflow.com/questions/38253868/ifelse-statement-with-factors-in-r
# https://stackoverflow.com/questions/44451100/r-compare-string-variables-with-different-levels
# https://stackoverflow.com/questions/12127149/find-the-max-date-in-a-single-column-across-multiple-rows
# whether each unique MRN had any palliative care
# days between earliest palliative care visit and DOD (set to infinity if never had)
# whether or not patient's death was inhouse
# check if patient  was in ICU on last admission, using Column “BILLDIV” == ICU -> Didn't pan out
# accumulation of different charges by MRN
myFinData <- myData %>%
group_by(MRN)%>%
summarise(AnyPall = ifelse(any(as.character(Palliative)=="pall"),"P","NP"),
AnyICU = ifelse(any(BILLDIV=="ICU"),"ICU","NoICU"),
EarliestPall=ifelse(any(as.character(Palliative)=="pall"),max(PallToDOD, na.rm=TRUE),NaN),
LatestPall=ifelse(any(as.character(Palliative)=="pall"),min(PallToDOD, na.rm=TRUE),NaN),
EarliestICU=ifelse(any(BILLDIV=="ICU"),max(ICUToDOD, na.rm=TRUE),NaN),
LatestICU=ifelse(any(BILLDIV=="ICU"),min(ICUToDOD, na.rm=TRUE),NaN),
InhouseDeath = ifelse(any(as.character(InhouseDeath)=="Yes"),"Yes","No"),
ICULA= ifelse(any(DOS==max(DOS,na.rm = TRUE) && BILLDIV == "ICU"),"Yes","No"),
TotTCLABOR=sum(TCLABOR, na.rm = TRUE),
TotTCFRINGE=sum(TCFRINGE, na.rm = TRUE),
TotTCMEDSUP=sum(TCMEDSUP, na.rm = TRUE),
TotTCOTHSUP=sum(TCOTHSUP, na.rm = TRUE),
TotTCPURSVC=sum(TCPURSVC, na.rm = TRUE),
TotTCEQUIP=sum(TCEQUIP, na.rm = TRUE),
TotTCUTILIT=sum(TCUTILIT, na.rm = TRUE),
TotTCOTHER=sum(TCOTHER, na.rm = TRUE),
TotTCDIRECT=sum(TCDIRECT, na.rm = TRUE),
TotNETCHG=sum(NETCHG, na.rm = TRUE),
TotNETPAY=sum(NETPAY, na.rm = TRUE))
myFinData <- as.data.frame(myFinData)
sapply(myFinData, class)
myFinData$AnyPall <- as.factor(myFinData$AnyPall)
levels(myFinData$AnyPall)
table(myFinData$AnyPall)
myFinData$AnyICU <- as.factor(myFinData$AnyICU)
levels(myFinData$AnyICU)
table(myFinData$AnyICU)
myFinData$InhouseDeath <- as.factor(myFinData$InhouseDeath)
levels(myFinData$InhouseDeath)
table(myFinData$InhouseDeath)
myFinData$ICULA <- as.factor(myFinData$ICULA)
levels(myFinData$ICULA)
table(myFinData$ICULA)
# drop because seemingly no-one was in ICU on their last service date
myFinData <- subset(myFinData, select = -c(ICULA))
#----------------------------------------------------------------------
# accumulation of charges subset by inpatient and outpatient
# counts of inpatient and outpatient admissions
# count of total distinct admissions
# precentage of net charges and payment attributed to palliative care
#----------------------------------------------------------------------
# subset of only patients who met with palliative care team
# https://stackoverflow.com/questions/3445590/extract-a-subset-of-a-dataframe-based-on-a-condition-involving-a-field
myPalPatients <- subset(myFinData, AnyPall=="P")
myPalPatients <- subset(myPalPatients, select = -c(AnyPall))
# subset of patients who received ICU services
myICUPatients <- subset(myFinData, AnyICU=="ICU")
myICUPatients <- subset(myICUPatients, select = -c(AnyICU))
#######################################################################################
# EDA + Visualizations
# help from: https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
# http://www.cookbook-r.com/Graphs/
########################################################################################
# average costs for palliative vs no-palliative patients
# https://www.biostars.org/p/362024/
# https://r4ds.had.co.nz/tidy-data.html
# https://stackoverflow.com/questions/11857935/plotting-the-average-values-for-each-level-in-ggplot2
# https://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2
# https://stackoverflow.com/questions/30183199/ggplot2-plot-mean-with-geom-bar
# https://stackoverflow.com/questions/12715635/ggplot2-bar-plot-with-both-stack-and-dodge
# average costs for palliative vs no-palliative patients
# must first gather data together by charge type
myFinData %>%
gather(`TotTCLABOR`, `TotTCFRINGE`,`TotTCMEDSUP`,`TotTCOTHSUP`,`TotTCPURSVC`,`TotTCEQUIP`,`TotTCUTILIT`,`TotTCOTHER`, `TotTCDIRECT`,`TotNETCHG`,`TotNETPAY`, key = "CostType", value = "CostValue", -AnyPall) %>%
ggplot(aes(x=CostType, y=CostValue, fill=CostType)) +
geom_bar(position="dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~AnyPall) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(name="Total Net Charges (USD)", labels=scales::comma) +
ggtitle("Cost Averages for Patients with and without Palliative Service Use") +
ylab("Average Cost (USD)") +
xlab("Cost Type")
#---------------------------------------------------------------------------------------
# for palliative, scatter plots of EarliestPall vs total net charges
# help from:
# http://www.cookbook-r.com/Graphs/Scatterplots_(ggplot2)/
# https://stackoverflow.com/questions/14563989/force-r-to-stop-plotting-abbreviated-axis-labels-e-g-1e00-in-ggplot2
# https://stackoverflow.com/questions/11610377/how-do-i-change-the-formatting-of-numbers-on-an-axis-with-ggplot
ggplot(myPalPatients, aes(x=EarliestPall, y=TotNETCHG)) + geom_point(shape=1) +
scale_y_continuous(name="Total Net Charges (USD)", labels=scales::comma) +
xlab("Days between Fist Palliative Service Use and Patient's DOD") +
ylab("Total Net Charges (USD)") +
ggtitle("Total Net Charges vs Time between First Palliative Care Treatment to DOD")
#------------------------------------------------------------------------------
# For inhouse deaths, how many received palliative care
# help from: https://www.statmethods.net/graphs/bar.html
# https://ggplot2.tidyverse.org/reference/geom_bar.html
table(myFinData$AnyPall, myFinData$InhouseDeath)
ggplot(myFinData, aes(InhouseDeath))+
geom_bar(aes(fill = AnyPall))+
xlab("Inhouse Death") +
ylab("Palliative vs No Palliative Service Use") +
ggtitle("Palliative Service Use by Inhouse Death")
# alternative view
ggplot(myFinData, aes(x=InhouseDeath, fill = AnyPall)) +
geom_bar(position = "fill") +
scale_y_continuous(name="Palliative vs No Palliative Service Use", labels=scales::percent)+
xlab("Inhouse Death") +
ggtitle("Palliative Care by Inhouse Death (Percentage)")
#--------------------------------------------------------------------------------------
# pertaining to ICU
# how many patients were seen in the ICU at all
ggplot(myFinData, aes(x=AnyICU,fill = AnyICU)) +
geom_bar() +
ylab("Patient Count") +
xlab("ICU Service Used") +
ggtitle("Use of ICU Services")
# how many ICU patients recieved palliative care before their first ICU visit vs after
# help from: https://stackoverflow.com/questions/24459752/can-dplyr-package-be-used-for-conditional-mutating
myICUPatients <- myICUPatients %>%
mutate(PallTiming = ifelse(as.character(AnyPall)=="NP","NP",
ifelse(EarliestPall>EarliestICU, "Before", "On/After")))
myICUPatients <- as.data.frame(myICUPatients)
myICUPatients$PallTiming <- factor(myICUPatients$PallTiming, levels= c("Before", "On/After", "NP"))
table(myICUPatients$PallTiming)
ggplot(myICUPatients, aes(x=PallTiming,fill = PallTiming)) +
geom_bar() +
ylab("Patient Count") +
xlab("Palliative Services Relative to First ICU Service") +
ggtitle("Use of Palliative Services for Patients Utilizing ICU Services")
.libPaths()
dir(.libPaths()[1])
dir(.libPaths()[2])
install.packages("BiocManager", repos = "https://cran.r-project.org")
BiocManager::install(version="devel")
BiocManager::version()
BiocManager::valid()
BiocManager::install(c("devtools", "remotes"))
install.packages("xml2", dependencies=TRUE)
install.packages("rversions", dependencies=TRUE)
install.packages("xml2", dependencies=TRUE)
install.packages("devtools", dependencies=TRUE)
dir(.libPaths()[1])
?install.packages
install.packages("devtools", dependencies=TRUE, repos = "https://cran.r-project.org")
.libPaths()
dir(.libPaths()[1])
dir(.libPaths()[2])
install.packages("BiocManager", repos = "https://cran.r-project.org")
BiocManager::install(version="devel")
BiocManager::version()
BiocManager::valid()
BiocManager::install(c("devtools", "remotes"))
install.packages("devtools", dependencies=TRUE, repos = "https://cran.r-project.org")
install.packages("xml2", dependencies=TRUE)
?rpath
??rpath
?dylib
??dylib
pkgconfig::get_config()
pkgconfig::get_config(cflags)
pkgconfig::get_config('cflags')
pkgconfig::get_config('libs')
c lear
pkg-config
install.packages("xml2", dependencies=TRUE)
R.home()
.libPaths()
Sys.getenv()
.libPaths()
Sys.getenv("PATH")
.libPaths()
Sys.getenv("PATH")
install.packages("BiocManager", repos = "https://cran.r-project.org")
BiocManager::install(version="devel")
BiocManager::version()
BiocManager::valid()
BiocManager::install(c("devtools", "remotes"))
dir(.libPaths()[1])
library(devtools)
.libPaths()
install.packages("httr", dependencies = TRUE)
library(httr)
install.packages("jpeg", dependencies = TRUE)
.libPaths()
install.packages("jpeg", dependencies = TRUE)
library(httr)
install.packages("jsonlite", dependencies = TRUE)
library(jsonlite)
library(devtools)
devtools::document()
setwd("~/Desktop/Bioconductor/packages/HCAccess")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
